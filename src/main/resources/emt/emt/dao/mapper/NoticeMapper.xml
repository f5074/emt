<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="emt.emt.notice.dao.mapper.NoticeMapper">
	<resultMap id="noticeMap" type="emt.emt.common.domain.Notice">
	<!-- 	<result property="noticeNo" column="notice_no"/> -->
		<result property="boardNo" column="board_no"/>

	</resultMap>
	
	<select id="noticeList" parameterType="int" resultMap="noticeMap">
		<![CDATA[
		SELECT board_no boardNo, board_title boardTitle, board_content boardContent, board_date boardDate,
			   board_count boardCount, user_id userId
		FROM (SELECT rownum AS rnum, M.* 
			  FROM (
			  		SELECT b.* 
					FROM board b, notice n
					WHERE b.board_no = n.board_no
					ORDER BY board_date DESC
			  		) M 
			  WHERE rownum  < = 7*#{noticeCount})
		WHERE rnum > 7*(#{noticeCount}-1)
		]]>
	</select>

	<select id="noticeCount" resultType="int">
		<![CDATA[
		SELECT COUNT(*) 
		FROM notice
		]]>		
	</select>
	
	<select id="noticeSequence" resultType="int">
		select seq_board_no.nextval
		from dual
	</select>
	
	<insert id="noticeInsert" parameterType="emt.emt.common.domain.Board">
		
		INSERT ALL
		INTO board
		VALUES (
			board_no
			, board_title
			, board_content
			, user_id
			, board_date
			, board_count
			)
		INTO notice
		VALUES (board_no)
		
		SELECT #{boardNo} AS board_no
			, #{boardTitle} AS board_title
			, #{boardContent} AS board_content
			, #{userId} AS user_id
			, sysdate AS board_date
			, 0 AS board_count
		FROM dual
	</insert>
	
	
	<update id="noticeUpdate" parameterType="emt.emt.common.domain.Notice">
		UPDATE board
		SET BOARD_TITLE = #{boardTitle}
			, BOARD_CONTENT = #{boardContent}
		WHERE BOARD_NO = #{boardNo}

	</update>
	
	<delete id="noticeDelete" parameterType="emt.emt.common.domain.Notice">
		DELETE notice
		WHERE BOARD_NO = #{boardNo}

	</delete>
	
	<!-- 인덱스 최근공지사항 목록  -->
	<select id="indexNoticeList" parameterType="int" resultMap="noticeMap">
		<![CDATA[
		SELECT board_no boardNo
			, board_title boardTitle
			, board_content boardContent
			, board_date boardDate
			, board_count boardCount
			, user_id userId
		FROM (
			SELECT rownum AS rnum
				, M.*
			FROM (
				SELECT b.*
				FROM board b
					, notice n
				WHERE b.board_no = n.board_no
				ORDER BY board_date DESC
				) M
			WHERE rownum < = 4 * #{noticeCount}
			)
		WHERE rnum > 4 * (#{noticeCount} - 1)

		]]>
	</select>
	
	

</mapper>